#!/usr/bin/env python3

import network
import database
import sys
from datetime import datetime
import json

args = sys.argv[1:]

network.start_server()

while True:
    command = input()

    if command == "net off":
        if not network.ENABLED:
            print("Networking is already disabled. enable it with 'net on'")
        else:
            # Disable networking somehow
            print("Disabling network...")
            network.ENABLED = False

    elif command == "net on":
        if network.ENABLED:
            print("Networking is already enabled. Disable it with 'net off'")
        else:
            # Re-Enable networking somehow
            print("Enabling network...")
            network.ENABLED = True
            network.start_server()

    elif command == "sync":
        for peer in network.peers:
            network.push_all(peer, datetime.now().year)

    elif command == "listpeers":
        print("Server has %d peers" % len(network.peers))
        for peer in network.peers:
            print("\t" + str(peer))

    elif command.startswith("addpeer"):
        peer = command.split(" ")[1]
        network.add_peer(peer)

    elif command.startswith("mkevent"):
        competition = command.split(" ")[1]
        jstr = command[command.find("{"):command.rfind("}")+1]
        try:
            event = json.loads(jstr)
            print(database.push_events(competition, [event]))
        except Exception as e:
            print(e)
        else:
            print("inserted into database")

    elif command.startswith("ftevent"):
        query = command.split(" ")[1]
        if query == "match":
            competition = command.split(" ")[2]
            match = command.split(" ")[3]
            print(competition, match)
            print(database.get_events(competition, match))
        elif query == "competition":
            competition = command.split(" ")[2]
            print(competition)
            print(database.get_events(competition))

    elif command == "quit":
        network.ENABLED = False
        break

    elif command == "":
        pass
    else:
        print("Unrecognized command.")
